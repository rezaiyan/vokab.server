name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/vokab/vokab-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H -p ${{ secrets.SSH_PORT || 22 }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Backup docker-compose.yml
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT || 22 }} << 'EOF'
            cd /root/vokab/vokab.server
            
            # Backup existing compose file if it exists
            if [ -f docker-compose.yml ]; then
              cp docker-compose.yml docker-compose.yml.backup
              echo "Backed up existing docker-compose.yml"
            fi
          EOF

      - name: Pull and restart containers
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT || 22 }} << 'EOF'
            cd /root/vokab/vokab.server
            
            # Log in to GHCR
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username ${{ github.actor }} --password-stdin
            
            # Pull latest image
            docker compose pull app
            
            # Restart the app service
            docker compose up -d app
            
            # Wait for healthcheck
            echo "Waiting for service to become healthy..."
            timeout=120
            elapsed=0
            while [ $elapsed -lt $timeout ]; do
              if docker compose ps app | grep -q "healthy"; then
                echo "Service is healthy!"
                exit 0
              fi
              echo "Waiting... ($elapsed/$timeout seconds)"
              sleep 5
              elapsed=$((elapsed + 5))
            done
            
            echo "Healthcheck timeout - checking logs"
            docker compose logs app --tail 50
            exit 1
          EOF

      - name: Verify deployment
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT || 22 }} << 'EOF'
            cd /root/vokab/vokab.server
            docker compose ps
            docker compose logs app --tail 20
          EOF

      - name: Rollback on failure
        if: failure()
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT || 22 }} << 'EOF'
            cd /root/vokab/vokab.server
            echo "Rolling back to previous version..."
            if [ -f docker-compose.yml.backup ]; then
              mv docker-compose.yml.backup docker-compose.yml
              docker compose up -d app
            fi
          EOF
