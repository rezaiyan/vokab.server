spring:
  application:
    name: vokab-server

  datasource:
    # Render: set DATABASE_URL to a JDBC URL, e.g.:
    # jdbc:postgresql://<HOST>:5432/vokabdb?sslmode=require
    url: ${DATABASE_URL:jdbc:h2:mem:vokabdb}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:}
    # Tip: you can omit driver-class-name and let Spring pick it from the URL
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        # In prod, set HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
        dialect: ${HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
        format_sql: true

  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:true}   # set to false in prod
      path: /h2-console

server:
  port: ${PORT:8080}
  error:
    include-message: never
    include-stacktrace: never
    include-exception: false
    include-binding-errors: never
    whitelabel:
      enabled: false

app:
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret-key-change-in-production}
    expiration-ms: ${JWT_EXPIRATION_MS:86400000}
    refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:604800000}

  openrouter:
    api-key: ${OPENROUTER_API_KEY:your-openrouter-api-key}
    base-url: ${OPENROUTER_BASE_URL:https://openrouter.ai/api/v1}

  revenuecat:
    webhook-secret: ${REVENUECAT_WEBHOOK_SECRET:your-revenuecat-webhook-secret}
    api-key: ${REVENUECAT_API_KEY:your-revenuecat-api-key}

  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8081}

  features:
    premium-features-enabled: ${PREMIUM_FEATURES_ENABLED:true}
    ai-image-extraction-enabled: ${AI_IMAGE_EXTRACTION_ENABLED:true}
    ai-daily-insight-enabled: ${AI_DAILY_INSIGHT_ENABLED:true}
    push-notifications-enabled: ${PUSH_NOTIFICATIONS_ENABLED:true}
    subscriptions-enabled: ${SUBSCRIPTIONS_ENABLED:true}
    free-ai-extraction-limit: ${FREE_AI_EXTRACTION_LIMIT:10}

  security:
    # Comma-separated list of test emails that bypass active check
    # Set in environment variable: TEST_EMAILS=email1@example.com,email2@example.com
    testEmails: ${TEST_EMAILS:}

  github-vocabulary:
    repo-url: ${GITHUB_REPO_URL:https://api.github.com/repos/rezaiyan/Vokab-collection}
    # GitHub personal access token for higher rate limits (5000/hour instead of 60/hour)
    # Generate at: https://github.com/settings/tokens
    # Set in environment variable: GITHUB_TOKEN=your_token_here
    token: ${GITHUB_TOKEN:}

logging:
  level:
    root: INFO
    com.alirezaiyan.vokab: INFO
    org.springframework.security: WARN
    org.springframework.web: INFO
    org.springframework.boot.actuate: OFF
    org.hibernate: ERROR

management:
  endpoints:
    web:
      exposure:
        exclude: "*"
  trace:
    http:
      enabled: false

